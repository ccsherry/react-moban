import React, {Component} from 'react';
import {Table} from 'antd';<%if(bottomToolItems && bottomToolItems.length){%>
import FixBottom from '@/layouts/fix-bottom';<%}%>
import {<%if(queryItems && queryItems.length){%>
    QueryBar,
    QueryItem,<%}%><%if(bottomToolItems && bottomToolItems.length){%>
    ToolItem,<%}%>
    Pagination,
    Operator,<%if(toolItems && toolItems.length){%>
    ToolBar,<%}%>
} from "@/library/antd";
import PageContent from '@/layouts/page-content';
import config from '@/commons/config-hoc';<% if(permissionPrefix){%>
import {hasPermission} from '@/commons';<%}%>
import <%= capitalName %>Edit from './<%= capitalName %>Edit';

@config({
    path: '<%= routePath %>',
    ajax: true,
})
export default class <%= capitalName %>List extends Component {
    state = {
        loading: false,
        dataSource: [],
        total: 0,
        pageSize: 10,
        pageNum: 1,
        params: {},
        id: void 0,
        visible: false,
    };<%if(queryItems && queryItems.length){%>

    // TODO 查询条件
    queryItems = [
        [<% for (let i = 0;i<queryItems.length;i++){%>
            {
                type: '<%= queryItems[i].type%>',
                field: '<%= queryItems[i].field%>',
                label: '<%= queryItems[i].label%>',
            },<%}%>
        ],
    ];<%}%><%if(toolItems && toolItems.length){%>

    // TODO 顶部工具条
    toolItems = [<% for (let i = 0;i<toolItems.length;i++){%>
        {
            type: '<%= toolItems[i].type%>',
            text: '<%= toolItems[i].text%>',
            icon: '<%= toolItems[i].icon%>',<%if(permissionPrefix && toolItems[i].permission){%>
            visible: hasPermission('<%= permissionPrefix %>_<%= toolItems[i].permission%>'),<%}%>
            onClick: () => {
                // TODO
            },
        },<%}%>
    ];<%}%><%if(bottomToolItems && bottomToolItems.length){%>

    // TODO 底部工具条
    bottomToolItems = [<% for (let i = 0;i<bottomToolItems.length;i++){%>
        {
            type: '<%= bottomToolItems[i].type%>',
            text: '<%= bottomToolItems[i].text%>',
            icon: '<%= bottomToolItems[i].icon%>',<%if(permissionPrefix && bottomToolItems[i].permission){%>
            visible: hasPermission('<%= permissionPrefix %>_<%= bottomToolItems[i].permission%>'),<%}%>
            onClick: () => {
                // TODO
            },
        },<%}%>
    ];<%}%>

    columns = [<% for (let i = 0;i<fields.length;i++){%>
        {title: '<%= fields[i].title%>', dataIndex: '<%= fields[i].dataIndex%>'},<%}%>
        {
            title: '操作',
            key: 'operator',
            render: (text, record) => {
                const {id, <%= fields[0].dataIndex%>} = record;
                const successTip = `删除“${<%= fields[0].dataIndex%>}”成功！`;
                const items = [
                    {
                        label: '修改',<% if(permissionPrefix){%>
                        visible: hasPermission('<%= permissionPrefix %>_UPDATE'),<%}%>
                        onClick: () => {
                            this.handleEdit(id);
                        },
                    },
                    {
                        label: '删除',
                        color: 'red',<% if(permissionPrefix){%>
                        visible: hasPermission('<%= permissionPrefix %>_DELETE'),<%}%>
                        confirm: {
                            title: `您确定要删除“${<%= fields[0].dataIndex%>}”？`,
                            onConfirm: () => {
                                this.setState({loading: true});
                                this.props.ajax
                                    .del(`<%= ajaxUrl %>/${id}`, null, {successTip})
                                    .then(() => this.handleSearch())
                                    .finally(() => this.setState({loading: false}));
                            },
                        },
                    },
                ];

                return (<Operator items={items}/>);
            },
        },
    ];

    componentDidMount() {
        this.handleSearch();
    }

    handleSearch = () => {
        const {params, pageNum, pageSize} = this.state;

        this.setState({loading: true});
        this.props.ajax
            .get('<%= ajaxUrl %>', {...params, pageNum, pageSize})
            .then(res => {
                if (res) {
                    const {list: dataSource, total} = res;
                    this.setState({
                        dataSource,
                        total,
                    });
                }
            })
            .finally(() => this.setState({loading: false}));
    };

    handleAdd = () => {
        this.setState({id: void 0, visible: true});
    };

    handleEdit = (id) => {
        this.setState({id, visible: true});
    };

    render() {
        const {
            loading,
            dataSource,
            total,
            pageNum,
            pageSize,
            visible,
            id,
        } = this.state;

        return (
            <PageContent loading={loading}><%if(queryItems && queryItems.length){%>
                <QueryBar>
                    <QueryItem
                        loadOptions={this.fetchOptions}
                        items={this.queryItems}
                        onSubmit={params => this.setState({params}, this.handleSearch)}
                    />
                </QueryBar>
                <%}%><%if(toolItems && toolItems.length){%>
                <ToolBar items={this.toolItems}/>
                    <%}%>
                <Table
                    columns={this.columns}
                    dataSource={dataSource}
                    rowKey="id"
                    pagination={false}
                />

                <Pagination
                    total={total}
                    pageNum={pageNum}
                    pageSize={pageSize}
                    onPageNumChange={pageNum => this.setState({pageNum}, this.handleSearch)}
                    onPageSizeChange={pageSize => this.setState({pageSize, pageNum: 1}, this.handleSearch)}
                /><%if(bottomToolItems && bottomToolItems.length){%>
                <FixBottom>
                    <ToolItem items={this.bottomToolItems}/>
                </FixBottom><%}%>

                <<%= capitalName %>Edit
                    id={id}
                    visible={visible}
                    onOk={() => this.setState({visible: false})}
                    onCancel={() => this.setState({visible: false})}
                />
            </PageContent>
        );
    }
}
